Karate club got split into two groups after the dispute.
We now compute a mathematical model using Girvan-Newman Algorithm which can split the groups into using edge betweenness. 
Edge betweenness is defined as the number of times that a particular edge is used by every node to connect all other nodes. 
So, now using the concepts of Girvan-Newman Algorithm I need to find out the maximum edge betweenness among all the edges.
The edge that has the maximum edge betweenness is deleted.
This process is continued till a new group or cluster is formed.
Now In order to do this I got the karate club data in GraphML format. This can be seen here \ref{g1}.
In order to plot the graph and calculate the edge betweenness, I found out that a library called \enquote{igraph} can be used.
I tried to install igraph library in my laptop with windows operating system, but it did not work out.
So, I went on to install igraph on mac but I got an error with ``cairo'' library. 
Later on I figured out that it was working fine in ubuntu. 
I wrote python code to calculate edge with maximum edge betweenness and deleted it each time in a loop. Code can be seen here \ref{lst:q1-1}
This was continued until I got two separate clusters. 
I plotted the graph of all the 34 nodes before splitting and can be seen here \ref{g2}.
The graph after the split can be seen here \ref{g4}.
I also printed all the nodes in each cluster and number of deletions required to form 2 clusters which can be seen here \ref{g3}.


Conclusion 
The inital graph which can be seen here \ref{g2} is represented in 2 colors. 
All the actors in green belong to Mr. Hi group and all the actors in orange belong to John's group.
This graph is drawn based on the ``Faction'' key in the graphML which groups all the actors into Mr. Hi's group or Johns group.
Output graph of 2 clusters can be seen here \ref{g4}.
Now when I compare both of these we can observe that ``Actor 3'' is in Mr. Hi's group according to the Faction key which is the original graph.
Whereas in the predicted graph that we got by implementing the Girvan-Newman Algorithm, ``Actor 3'' is in John's group.
So, Except Actor 3 all other predictions are correct and this proves that the predicted graph is highly accurate.
Finally, this solution tells us that Girvan-Newman Algorithm give accurate predicted graph.


2
This is almost similar to the solution of question 1, the only difference is to get 3, 4 and 5 clusters rather than 2.
The initial graph can be seen here \ref{b2} and the code can be seen here \ref{lst:q2-1
The graph with 3, 4 and 5 clusters can be seen here \ref{d4}, \ref{e5}, \ref{f6}

